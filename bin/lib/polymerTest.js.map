{
"version":3,
"file":"polymerTest.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","E:/dev/haxe/polymerTest/src/Main.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","E:/dev/haxe/polymerTest/src/controller/AjaxTestController.hx","E:/dev/haxe/polymerTest/src/controller/AppController.hx","E:/dev/haxe/polymerTest/src/controller/SignalController.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/haxe/rtti/Meta.hx","E:/dev/haxe/polymerTest/src/helper/DomHelper.hx","E:/dev/haxe/polymerTest/src/helper/PolymerElementHelper.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/ClassMap.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/InjectionConfig.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/Injector.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/MethodInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/ConstructorInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/NoParamsConstructorInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/PostConstructInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/PropertyInjectionPoint.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/result/InjectionResult.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/result/InjectValueResult.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,4/msignal/Signal.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,4/msignal/Slot.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,4/msignal/SlotList.hx","E:/dev/haxe/polymerTest/src/test/TestClass.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","C:/HaxeToolkit/haxe/std/haxe/Constraints.hx","C:/HaxeToolkit/haxe/lib/minject/1,6,1/minject/point/InjectionPoint.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","package;\r\n\r\nimport controller.*;\r\nimport externs.*;\r\nimport haxe.Timer;\r\nimport js.*;\r\nimport js.html.*;\r\nimport jQuery.*;\r\nimport haxe.rtti.Meta;\r\nimport polymer.*;\r\nimport helper.*;\r\nimport helper.*;\r\nimport minject.Injector;\r\nimport test.TestClass;\r\n\r\nusing StringTools;\r\nusing haxe.Json;\r\nusing polymer.Polymer;\r\n//using polymer.PolymerElement;\r\nusing helper.DomHelper;\r\nusing helper.PolymerElementHelper;\r\nusing externs.MyElement;\r\n\r\n/**\r\n * ...\r\n * @author Chris Anderson\r\n */\r\nclass Main\r\n{\r\n\tprivate var app:App = cast Browser.document.querySelector('#app');\r\n\tprivate var _mainInjector:Injector;\r\n\t\r\n\tstatic function main()\r\n\t{\r\n\t\t//trace('Main.main()');\r\n\t\t\r\n\t\tvar mainInstance = new Main();\r\n\t}\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t//trace('Main.new()');\r\n\t\t\r\n\t\tjs.Browser.window.addEventListener(PolymerEvents.POLYMER_READY, onPolymerReady);\r\n\t\tjs.Browser.window.addEventListener(PolymerEvents.WEB_COMPONENTS_READY, onWebComponentsReady);\r\n\t}\r\n\t\r\n\tpublic function onPolymerReady(event:CustomEvent)\r\n\t{\r\n\t\ttrace({'onPolymerReady() event':event});\r\n\t\t\r\n\t\t//Browser.window.console.warn(\"untyped __js__('window.Polymer'): \", untyped __js__('window.Polymer'));\r\n\t\t\r\n\t\t//var polymerTest:Polymer = new Polymer();\r\n\t\t//Browser.window.console.warn('polymerTest: ', polymerTest);\r\n\t\t//Browser.window.console.warn('Polymer: ', Polymer);\r\n\t\t//Browser.window.console.warn('polymerTest.api: ', polymerTest.api);\r\n\t\t//Browser.window.console.warn('Polymer.api: ', Polymer.api);\r\n\t\t\r\n\t\t//var template = Browser.document.querySelector('template');\r\n\t\t//Browser.window.console.log('template: ', template);\r\n\t\t\r\n\t\t//var test = new controller.AjaxTestController();\r\n\t\t//_testThisJunk();\r\n\t}\r\n\t\r\n\tpublic function onWebComponentsReady(event:CustomEvent)\r\n\t{\r\n\t\ttrace({'onWebComponentsReady() event': event});\r\n\t\t\r\n\t\tapp.addEventListener('template-bound', _onAppTemplateBound);\r\n\t}\r\n\t\r\n\tpublic function _onAppTemplateBound(event):Void\r\n\t{\r\n\t\ttrace('_onAppTemplateBound()');\r\n\t\t\r\n\t\t_mainInjector = new Injector();\r\n\t\t_initializeContext();\r\n\t\t\r\n\t\t_testThisJunk();\r\n\t\t\r\n\t\t//var ajaxTestController = new controller.AjaxTestController();\r\n\t\t//_mainInjector.injectInto(ajaxTestController);\r\n\t\t_mainInjector.instantiate(AjaxTestController);\r\n\t\t\r\n\t\ttrace({'_onAppTemplateBound() _mainInjector.hasMapping(TestClass)': _mainInjector.hasMapping(TestClass)});\r\n\t}\r\n\t\r\n\tprivate function _initializeContext()\r\n\t{\r\n\t\ttrace('_initializeContext()');\r\n\t\t\r\n\t\t//using mapValue() to ensure TestClass constructor is used\r\n\t\t_mainInjector.mapValue(TestClass, new TestClass());\r\n\t\t_mainInjector.mapValue(SignalController, new SignalController());\r\n\t}\r\n\t\r\n\tprivate function _testThisJunk()\r\n\t{\r\n\t\t_mainInjector.instantiate(AppController);\r\n\t\t\r\n\t\t//var app:App = cast Browser.document.querySelector('#app');\r\n\t\t//app.headerText = 'Haxe Polymer Test';\r\n\t\t//\r\n\t\t//app.onTestButtonClick = function(event)\r\n\t\t//{\r\n\t\t\t//Browser.alert('test33 :)');\r\n\t\t//}\r\n\t\t\r\n\t\t//var appElement:AppElement = AppElement.getDomInstance('#appElement');\r\n\t\tvar appElement:AppElement = cast Browser.document.querySelector('#appElement');\r\n\t\ttrace({'appElement': appElement});\r\n\t\t//Browser.window.console.warn('appElement.declarativeMessage: ', appElement.declarativeMessage);\r\n\t\t//Browser.window.console.log('appElement.localName: ', appElement.localName);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(appElement.localName): ', Polymer.getRegisteredPrototype(appElement.localName));\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(appElement.localName).element: ', Polymer.getRegisteredPrototype(appElement.localName).element);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(appElement.localName)._publishNames: ', Polymer.getRegisteredPrototype(appElement.localName)._publishNames);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(appElement.localName)._publishLC: ', Polymer.getRegisteredPrototype(appElement.localName)._publishLC);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(appElement.localName).__proto__: ', Polymer.getRegisteredPrototype(appElement.localName).__proto__);\r\n\t\t\r\n\t\tappElement.test();\r\n\t\t\r\n\t\tvar myElementDomTest:MyElement = MyElement.getDomInstance('#test36');\r\n\t\t//var myElementDomTest:MyElement = new MyElement('#test36');\r\n\t\ttrace(\"typeof(myElementDomTest): \" + Type.typeof(myElementDomTest));\r\n\t\t//myElementTest.test();\r\n\t\t//Browser.window.console.warn('myElementDomTest: ', myElementDomTest);\r\n\t\t//Browser.window.console.warn('myElementDomTest.declarativeMessage: ', myElementDomTest.declarativeMessage);\r\n\t\tmyElementDomTest.declarativeMessage = 'test36 !!! changed @ runtime by haxe !!!';\r\n\t\t//Browser.window.console.warn('myElementDomTest.declarativeMessage: ', myElementDomTest.declarativeMessage);\r\n\t\t//Browser.window.console.log('appElement.localName: ', appElement.localName);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(myElementDomTest.localName): ', Polymer.getRegisteredPrototype(myElementDomTest.localName));\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(myElementDomTest.localName).element: ', Polymer.getRegisteredPrototype(myElementDomTest.localName).element);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(myElementDomTest.localName)._publishNames: ', Polymer.getRegisteredPrototype(myElementDomTest.localName)._publishNames);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(myElementDomTest.localName)._publishLC: ', Polymer.getRegisteredPrototype(myElementDomTest.localName)._publishLC);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(myElementDomTest.localName).__proto__: ', Polymer.getRegisteredPrototype(myElementDomTest.localName).__proto__);\r\n\t\t\r\n\t\tmyElementDomTest.test();\r\n\t\t\r\n\t\t//var myElementTest = MyElement.prototype;\r\n\t\t//trace(\"typeof(myElementTest): \" + Type.typeof(myElementTest));\r\n\t\t////MyElement.test();\r\n\t\t//Browser.window.console.warn('myElementTest: ', myElementTest);\r\n\t\t//Browser.window.console.warn('myElementTest._tagName: ', myElementTest._tagName);\r\n\t\t//myElementTest._boundTextInput.value = \"asdfafadsfadfas\";//blows up :(\r\n\t\t\r\n\t\tvar myElementDomTest2:MyElement = MyElement.getDomInstance('#test33');\r\n\t\t//var myElementDomTest2:MyElement = new MyElement('#test33');\r\n\t\t//trace(\"typeof(myElementDomTest2): \" + Type.typeof(myElementDomTest2));\r\n\t\t//Browser.window.console.warn('myElementDomTest2: ', myElementDomTest2);\r\n\t\t//Browser.window.console.warn('myElementDomTest2.declarativeMessage: ', myElementDomTest2.declarativeMessage);\r\n\t\tmyElementDomTest2.declarativeMessage = 'test33 !!! changed @ runtime by haxe !!!';\r\n\t\t//Browser.window.console.warn('myElementDomTest2.declarativeMessage: ', myElementDomTest2.declarativeMessage);\r\n\t\t\r\n\t\tvar tempAppNestedContent:Dynamic = Browser.document.querySelector('#appNestedContent');\r\n\t\ttrace({'tempAppNestedContent':tempAppNestedContent});\r\n\t\ttempAppNestedContent.declarativeMessage = appElement.declarativeMessage;\r\n\t\t\r\n\t\tvar myNestedElement:MyElement = MyElement.getDomInstance('#test32');\r\n\t\tvar tempTest32NestedContent:Dynamic = Browser.document.querySelector('#test32NestedContent');\r\n\t\ttempTest32NestedContent.declarativeMessage = appElement.declarativeMessage;\r\n\t\ttempTest32NestedContent.myElementDeclarativeMessage = myNestedElement.declarativeMessage;\r\n\t\t\r\n\t\t//was thinking about binding tempTest32NestedContent.myElementDeclarativeMessage to myNestedElement.declarativeMessage if possible\r\n\t\t//var tempBoundTextInput = cast myNestedElement.boundTextInput;//.bind(\"value\", new PathObserver(myElementDomTest2, \"boundText\"));//preferred\r\n\t\t//tempBoundTextInput.bind(\"textContent\", new PathObserver(myNestedElement, \"declarativeMessage\"));\r\n\t\t\r\n\t\tvar tempStaticShadowDomNodeList = myElementDomTest.getStaticShadowDomNodeList();//instance preferred\r\n\t\t//Browser.window.console.log('tempStaticShadowDomNodeList: ', tempStaticShadowDomNodeList);\r\n\t\t//Browser.window.console.log(\"myElementDomTest.getElementById('selectTest'): \", myElementDomTest.getElementById('selectTest'));\r\n\t\t//Browser.window.console.log(\"tempStaticShadowDomNodeList.get('selectTest'): \", tempStaticShadowDomNodeList.get('selectTest'));\r\n\t\t\r\n\t\t//testing out NodeBind outside of templates\r\n\t\t//tempStaticShadowDomNodeList.boundTextInput.bind(\"value\", new PathObserver(myElementDomTest2, \"boundText\"));//works but tempStaticShadowDomNodeList is dynamic so we don't really know what properties would be found at runtime\r\n\t\t//var test = cast myElementDomTest.boundTextInput;//.bind(\"value\", new PathObserver(myElementDomTest2, \"boundText\"));//preferred\r\n\t\t//test.bind(\"value\", new PathObserver(myElementDomTest2, \"boundText\"));//preferred \r\n\t\t//myElementDomTest.boundTextInput.value = 'dfadfdfadfadf';//works when binding is off \r\n\t\t\r\n\t\t//var selectTest:SelectElement = cast untyped __js__('window.document.querySelector(\"#test36\").$.selectTest');//fix here works but want to tap MyElement for this\r\n\t\t//var selectTest:SelectElement = cast tempStaticShadowDomNodeList.selectTest;//works but tempStaticShadowDomNodeList is dynamic\r\n\t\t//var selectTest:SelectElement = cast myElementDomTest.getShadowDomElement('#selectTest33');//works but dev has to know the elements available in the shadow dom\r\n\t\tvar selectTest:SelectElement = cast tempStaticShadowDomNodeList.get('selectTest');//works but dev has to know the elements available in the shadow dom\r\n\t\t//var selectTest:SelectElement = myElementDomTest.get_selectTest();//works\r\n\t\tselectTest.addEventListener('change', function(event)\r\n\t\t{\r\n\t\t\t//Browser.window.console.log('onSelectTestChange() event: ', event);\r\n\t\t\t\r\n\t\t\tvar tempOptionCollection:Array<OptionElement> = cast selectTest.options;\r\n\t\t\tvar tempSelectedOption:OptionElement = null;\r\n\t\t\t\r\n\t\t\tfor(tempOption in tempOptionCollection)\r\n\t\t\t{\r\n\t\t\t\tif(tempOption.selected)\r\n\t\t\t\t{\r\n\t\t\t\t\ttempSelectedOption = cast tempOption;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Browser.window.console.log('onSelectTestChange() tempSelectedOption: ', tempSelectedOption);\r\n\t\t\t//Browser.window.console.log('onSelectTestChange() tempSelectedOption.value: ', tempSelectedOption.value);\r\n\t\t\t\r\n\t\t\tmyElementDomTest.boundText3 = 'test' + tempSelectedOption.value;\r\n\t\t});\r\n\t\t\r\n\t\t//testing code completion macros\r\n\t\ttrace('test33 macro test: ' + DomElementHelper.index__html);\r\n\t\t\r\n\t\t//testing overriding extern methods\r\n\t\t//myElementDomTest.currentDateChanged = function(value)\r\n\t\t//{\r\n\t\t\t//trace(value);\r\n\t\t//}\r\n\t\t\r\n\t\t//\r\n\t\tvar testTemplate:PolymerElement = cast Browser.document.querySelector('#testTemplate');\r\n\t\ttrace({'testTemplate': testTemplate});\r\n\t\t//var tempGrid = testTemplate.getStaticShadowDomNodeList();// .get('grid');\r\n\t\t//Browser.window.console.log('tempGrid: ', tempGrid);\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","package controller;\r\n\r\nimport haxe.Timer;\r\nimport js.*;\r\nimport js.html.*;\r\nimport jQuery.*;\r\nimport haxe.rtti.Meta;\r\nimport polymer.*;\r\nimport externs.AjaxTest;\r\nimport test.TestClass;\r\nimport typeDefinitions.GridData;\r\nimport events.Events;\r\nimport externs.GridWrapper;\r\n//import prime.bindable.Bindable;\r\n\r\nusing StringTools;\r\nusing haxe.Json;\r\nusing polymer.Polymer;\r\nusing polymer.PolymerElement;\r\nusing helper.DomHelper;\r\nusing helper.PolymerElementHelper;\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\n//@:expose\r\n@:keep //using @:keep here to make sure dce doesn't remove what might be considered unused code\r\nclass AjaxTestController\r\n{\r\n\tprivate var ajaxTestElement:AjaxTest = AjaxTest.getDomInstance('#ajaxTest');\r\n\tprivate var polymerAjax:PolymerAjax;\r\n\tprivate var downloadBtn:ButtonElement;\r\n\t\r\n\t//@inject\r\n\tprivate var _testClassInstance:TestClass;\r\n\tprivate var _signalControllerInstance:SignalController;\r\n\t\r\n\t@inject\r\n\tpublic function new(testClassInstance:TestClass, signalControllerInstance:SignalController)\r\n\t{\r\n\t\ttrace('new AjaxTestController()');\r\n\t\t\r\n\t\t_testClassInstance = testClassInstance;\r\n\t\ttrace({'new() _testClassInstance: ': _testClassInstance.toString()});\r\n\t\t\r\n\t\t_signalControllerInstance = signalControllerInstance;\r\n\t\ttrace({'new() _signalControllerInstance: ': _signalControllerInstance});\r\n\t\t\r\n\t\t//ajaxTestElement = cast Browser.document.querySelector('#ajaxTest');\r\n\t\t//ajaxTestElement = AjaxTest.getDomInstance('#ajaxTest');\r\n\t\tajaxTestElement.addEventListener('domReady', onDomReady);\r\n\t\t\r\n\t\tpolymerAjax = cast ajaxTestElement.getShadowDomElementById('polymerAjax');\r\n\t\tdownloadBtn = cast ajaxTestElement.getShadowDomElementById('bnDownloadJson');\r\n\t\t\r\n\t\t_testThisJunk();\r\n\t}\r\n\t\r\n\t//testing out catching custom events dispatched from custom elements\r\n\tpublic function onDomReady(event:CustomEvent):Void\r\n\t{\r\n\t\ttrace({'onDomReady() test33 event':event});\r\n\t}\r\n\t\r\n\tinline public function onPolymerResponse(event:CustomEvent):Void\r\n\t{\r\n\t\ttrace({'onPolymerResponse() event: ': event});\r\n\t\ttrace({'onPolymerResponse() event.detail.response: ': event.detail.response});\r\n\t\t\r\n\t\tvar tempResult:GridData = Json.parse(event.detail.response.stringify());\r\n\t\tvar tempResultString:String = '';\r\n\t\t//var tempArray = [];\r\n\t\tvar tempResultArray = [];//using for the grids\r\n\t\t\r\n\t\tfor(tempProp in Reflect.fields(tempResult))\r\n\t\t{\r\n\t\t\ttempResultString += tempProp + ': ' + Reflect.field(tempResult, tempProp) + '<br>';\r\n\t\t\t//tempArray.push({tempProp:Reflect.field(tempResult, tempProp)});\r\n\t\t}\r\n\t\t\r\n\t\tfor(i in 0...100)\r\n\t\t{\r\n\t\t\ttempResultArray.push(\r\n\t\t\t{\r\n\t\t\t\ttitle:tempResult.titleList[Math.ceil(Math.random() * tempResult.titleList.length) - 1],\r\n\t\t\t\tdate:tempResult.dateList[Math.ceil(Math.random() * tempResult.dateList.length) - 1],\r\n\t\t\t\ttype:tempResult.typeList[Math.ceil(Math.random() * tempResult.typeList.length) - 1],\r\n\t\t\t\tcontent:tempResult.contentList[Math.ceil(Math.random() * tempResult.contentList.length) - 1],\r\n\t\t\t\tenabled:tempResult.enabledList[Math.ceil(Math.random() * tempResult.enabledList.length) - 1]\r\n\t\t\t});\r\n\t\t};\r\n\t\t\r\n\t\t//Browser.window.console.log('onPolymerResponse() ajaxTestElement: ', ajaxTestElement);\r\n\t\tcast(ajaxTestElement.getShadowDomElementById('ajaxTestResponse'), DivElement).innerHTML = tempResultString;\r\n\t\t\r\n\t\t//cast(ajaxTestElement.getStaticShadowDomNodeList().get('gridNested'), GridWrapper).gridData = tempResultArray;\r\n\t\t\r\n\t\t////testing sharing data between 2 directives\r\n\t\t//MyElement.getDomInstance('#test36').declarativeMessage = event.detail.response.name + ' ' + event.detail.response.version;\r\n\t\t//MyElement.getDomInstance('#test36').boundText3 = event.detail.response.name + ' ' + event.detail.response.version;\r\n\t\t\r\n\t\t//var grid:Dynamic = cast Browser.document.getElementById(\"grid\");\r\n\t\t//var gridNested:Dynamic = ajaxTestElement.getShadowDomElementById('gridNested');\r\n\t\t//grid.data = tempResultArray;//imperative works\r\n\t\t//gridNested.data = tempResultArray;//imperative works\r\n\t\t//_testClassInstance.gridData = new Bindable(cast tempResultArray);\r\n\t\t\r\n\t\t//falling back to events temporarily until i get binding working\r\n\t\tajaxTestElement.fire(Events.GRID_DATA_READY, {result:tempResultArray});\r\n\t\t_signalControllerInstance.gridDataSignal.dispatch(tempResultArray);\r\n\t\t\r\n\t\t//trace({'onPolymerResponse() ajaxTestElement.templateInstance.model':ajaxTestElement.templateInstance.model});\r\n\t\t//trace({'onPolymerResponse() ajaxTestElement.templateInstance':ajaxTestElement.templateInstance});\r\n\t\t\r\n\t\t//trace({'onPolymerResponse() gridNested.templateInstance.model: ': gridNested.templateInstance.model});\r\n\t\t//trace({'onPolymerResponse() gridNested.templateInstance: ': gridNested.templateInstance});\r\n\t\t\r\n\t\t//Browser.window.console.log('onPolymerResponse() grid: ', grid);\r\n\t\t//Browser.window.console.log('onPolymerResponse() gridNested: ', gridNested);\r\n\t}\r\n\t\r\n\t//@post\r\n\tpublic function _testThisJunk():Void\r\n\t{\r\n\t\t//trace({'_testThisJunk() _testClassInstance: ': _testClassInstance.toString()});\r\n\t\t\r\n\t\t//Browser.window.console.warn('ajaxTestElement: ', ajaxTestElement);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(ajaxTestElement.localName): ', Polymer.getRegisteredPrototype(ajaxTestElement.localName));\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(ajaxTestElement.localName).element: ', Polymer.getRegisteredPrototype(ajaxTestElement.localName).element);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(ajaxTestElement.localName)._publishNames: ', Polymer.getRegisteredPrototype(ajaxTestElement.localName)._publishNames);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(ajaxTestElement.localName)._publishLC: ', Polymer.getRegisteredPrototype(ajaxTestElement.localName)._publishLC);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(ajaxTestElement.localName).__proto__: ', Polymer.getRegisteredPrototype(ajaxTestElement.localName).__proto__);\r\n\t\t\r\n\t\tvar tempStaticShadowDomNodeList = ajaxTestElement.getStaticShadowDomNodeList();//instance preferred\r\n\t\t//Browser.window.console.log('tempStaticShadowDomNodeList: ', tempStaticShadowDomNodeList);\r\n\t\t//Browser.window.console.log(\"ajaxTestElement.getElementById('polymerAjax'): \", ajaxTestElement.getElementById('polymerAjax'));\r\n\t\t//Browser.window.console.log(\"tempStaticShadowDomNodeList.get('polymerAjax'): \", tempStaticShadowDomNodeList.get('polymerAjax'));\r\n\t\t\r\n\t\t//Browser.window.console.warn('polymerAjax: ', polymerAjax);\r\n\t\t//Browser.window.console.warn('downloadBtn: ', downloadBtn);\r\n\t\t\r\n\t\tdownloadBtn.addEventListener('click', function(event){polymerAjax.go();});\r\n\t\t//polymerAjax.addEventListener(PolymerEvents.POLYMER_RESPONSE, onPolymerResponse);//imperative logic works \r\n\t\t//polymerAjax.addEventListener(PolymerEvents.POLYMER_RESPONSE, function(event){trace('test');});//imperative logic works\r\n\t\t\r\n\t\t//testing out reading the dom and handling declared events\r\n\t\tpolymerAjax.mapDomEventHandler(PolymerEvents.POLYMER_RESPONSE, this);\r\n\t\t\r\n\t\t//Browser.window.console.log('polymerAjax.localName: ', polymerAjax.localName);\r\n\t\t//Browser.window.console.log('Polymer.getRegisteredPrototype(): ', Polymer.getRegisteredPrototype(polymerAjax.localName));\r\n\t}\r\n}","package controller;\r\n\r\nimport externs.AjaxTest;\r\nimport externs.AppElement;\r\nimport externs.GridWrapper;\r\nimport externs.MyElement;\r\nimport externs.polymer.CoreIconButton;\r\nimport haxe.Timer;\r\nimport js.*;\r\nimport js.html.*;\r\nimport jQuery.*;\r\nimport haxe.rtti.Meta;\r\nimport polymer.*;\r\nimport externs.App;\r\n//import bindx.Bind;\r\n//import prime.utils.Bind;\r\nimport test.TestClass;\r\nimport events.Events;\r\nimport helper.DomElementHelper;\r\n\r\nusing polymer.Polymer;\r\nusing polymer.PolymerElement;\r\nusing helper.DomHelper;\r\nusing helper.PolymerElementHelper;\r\n//using bindx.Bind;\r\n//using prime.utils.Bind;\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\n//@:expose\r\n@:keep //using @:keep here to make sure dce doesn't remove what might be considered unused code\r\nclass AppController\r\n{\r\n\tprivate var app:App = cast Browser.document.querySelector('#app');\r\n\tprivate var test33Button:ButtonElement = cast Browser.document.querySelector('#test33Button');\r\n\tprivate var test33Button2:CoreIconButton = cast Browser.document.querySelector('#test33Button2');\r\n\tprivate var grid:GridWrapper = cast Browser.document.querySelector('#grid');\r\n\tprivate var _gridData:Array<Dynamic>;\r\n\t\r\n\t//@inject\r\n\tprivate var _testClassInstance:TestClass;\r\n\tprivate var _signalControllerInstance:SignalController;\r\n\t\r\n\t@inject\r\n\tpublic function new(testClassInstance:TestClass, signalControllerInstance:SignalController)\r\n\t{\r\n\t\ttrace('new AppController()');\r\n\t\t\r\n\t\t_testClassInstance = testClassInstance;\r\n\t\ttrace({'new() _testClassInstance: ': _testClassInstance.toString()});\r\n\t\t\r\n\t\t_signalControllerInstance = signalControllerInstance;\r\n\t\ttrace({'new() _signalControllerInstance: ': _signalControllerInstance});\r\n\t\t\r\n\t\t_testThisJunk();\r\n\t}\r\n\t\r\n\tpublic function _testThisJunk():Void\r\n\t{\r\n\t\ttrace('_testThisJunk()');\r\n\t\t\r\n\t\t//app = cast Browser.document.querySelector('#app');\r\n\t\t\r\n\t\ttrace({'app':app});\r\n\t\t\r\n\t\tapp.headerText = 'Haxe Polymer Test';\r\n\t\t\r\n\t\t//shadow dom complains here\r\n\t\t//test33Button = cast app.getShadowDomElement('#test33Button');\r\n\t\t//test33Button2 = cast app.getShadowDomElement('#test33Button2');\r\n\t\t\r\n\t\ttrace({'test33Button':test33Button});\r\n\t\ttrace({'test33Button2':test33Button2});\r\n\t\ttrace({'grid':grid});\r\n\t\t\r\n\t\t//works\r\n\t\t//app.onTestButtonClick = function(event)\r\n\t\t//{\r\n\t\t\t//Browser.alert('test33 :) event: ' + event);\r\n\t\t//}\r\n\t\t\r\n\t\t//app.onTestButtonClick = onTestButtonClick;//works in ff and ie too\r\n\t\t\r\n\t\t//testing out reading the dom and handling declared events\r\n\t\ttest33Button.mapDomEventHandler('click', this);\r\n\t\ttest33Button2.mapDomEventHandler('click', this);\r\n\t\t\r\n\t\t//setupKendoGrid();\r\n\t\t\r\n\t\t//fix here throws errors with haxe 3.2, thinking about testing prime-bindable\r\n\t\t//var onGridDataChange = function(oldValue, newValue) \r\n\t\t//{\r\n\t\t\t//setupKendoGrid();\r\n\t\t//}\t\t\r\n\t\t//_testClassInstance.gridData.bindx(onGridDataChange);\r\n\t\t//onGridDataChange.on(_testClassInstance.gridData.change, this);\r\n\t\t\r\n\t\tif(grid != null)\r\n\t\t{\r\n\t\t\t//grid.addEventListener(Events.GRID_DATA_READY, onGridDataChange);\r\n\t\t\tgrid.addEventListener(Events.GRID_DATA_READY, function(event){Browser.alert('event: ' + event);});\r\n\t\t}\r\n\t\t_signalControllerInstance.gridDataSignal.add(onGridDataChange);\r\n\t}\r\n\t\r\n\tpublic function onTestButtonClick(event)\r\n\t{\r\n\t\tBrowser.alert('html button test33 :) event: ' + event);\r\n\t\ttrace('html button test33 :) event: ' + event);\r\n\t}\r\n\t\r\n\tpublic function onTestButtonClick2(event)\r\n\t{\r\n\t\tBrowser.alert('paper-button test33 :) event: ' + event);\r\n\t\ttrace('paper-button test33 :) event: ' + event);\r\n\t}\r\n\t\r\n\t//public function onGridDataChange(oldValue, newValue):Void \r\n\t//public function onGridDataChange(event:CustomEvent):Void \r\n\tpublic function onGridDataChange(data:Array<Dynamic>):Void \r\n\t{\r\n\t\t//Browser.alert('onGridDataChange event: ' + event);\r\n\t\t//trace({'onGridDataChange() event':event});\r\n\t\ttrace({'onGridDataChange() data':data});\r\n\t\t\r\n\t\t_gridData = data;\r\n\t\tapp.gridData = _gridData;//testing template level dataBinding\r\n\t\tapp.gridDataSource = {data:_gridData, pageSize:10};//testing template level dataBinding\r\n\t\t\r\n\t\tif(grid != null)\r\n\t\t{\r\n\t\t\ttrace({'onGridDataChange() grid':grid});\r\n\t\t\t//grid.setGridData(_gridData);//works\r\n\t\t}\r\n\t\t\r\n\t\ttrace({'app.gridData':app.gridData});\r\n\t\ttrace({'app.gridDataSource':app.gridDataSource});\r\n\t\t\r\n\t\t//if(_gridData == null)\r\n\t\t//{\r\n\t\t\t//setupKendoGrid();\r\n\t\t//}\r\n\t\t\r\n\t\t//var tempGrid:Dynamic = new JQuery(\"#grid\").data(\"kendoGrid\");\r\n\t\t////var tempGrid:Dynamic = untyped __js__('$(\"#grid\").data(\"kendoGrid\")');\r\n\t\t//trace({'tempGrid':tempGrid});\r\n\t\t//tempGrid.dataSource = {data:_gridData, pageSize:10};\r\n\t}\r\n\t\r\n\tpublic function setupKendoGrid():Void \r\n\t{\r\n\t\t//trace({'setupKendoGrid _testClassInstance.gridData':_testClassInstance.gridData});\r\n\t\t//trace({'setupKendoGrid gridData':gridData});\r\n\t\t\r\n\t\tvar testGrid:Dynamic = untyped __js__('$(\"#grid\").kendoGrid(\r\n\t\t{\r\n\t\t\t//dataSource:{\r\n\t\t\t\t\t////type: \"odata\",\r\n\t\t\t\t\t////transport: {\r\n\t\t\t\t\t\t\t////read: \"http://demos.telerik.com/kendo-ui/service/Northwind.svc/Customers\"\r\n\t\t\t\t\t////},\r\n\t\t\t\t\t//data:gridData,\r\n\t\t\t\t\t//pageSize: 5\r\n\t\t\t//},\r\n\t\t\theight: 200,\r\n\t\t\tgroupable: true,\r\n\t\t\tsortable: true,\r\n\t\t\tpageable: {\r\n\t\t\t\t\trefresh: true,\r\n\t\t\t\t\tpageSizes: true,\r\n\t\t\t\t\tbuttonCount: 5\r\n\t\t\t},\r\n\t\t\tcolumns: [{\r\n\t\t\t\t\tfield: \"date\",\r\n\t\t\t\t\ttitle: \"Date\"\r\n\t\t\t}, {\r\n\t\t\t\t\tfield: \"title\",\r\n\t\t\t\t\ttitle: \"Title\"\r\n\t\t\t}, {\r\n\t\t\t\t\tfield: \"type\",\r\n\t\t\t\t\ttitle: \"Type\"\r\n\t\t\t}, {\r\n\t\t\t\t\tfield: \"content\",\r\n\t\t\t\t\ttitle: \"Content\"\r\n\t\t\t}, {\r\n\t\t\t\t\tfield: \"enabled\",\r\n\t\t\t\t\ttitle: \"Enabled\"\r\n\t\t\t}]\r\n\t\t});');\r\n\t}\r\n}","package controller;\r\n\r\nimport msignal.Signal;\r\nimport typeDefinitions.GridData;\r\n\r\n/**\r\n * ...\r\n * @author Chris Anderson\r\n */\r\nclass SignalController\r\n{\r\n\tpublic var gridDataSignal = new Signal1<Array<Dynamic>>();\r\n\t\r\n\tpublic function new()\r\n\t{}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.rtti;\n\n/**\n\tAn api to access classes and enums metadata at runtime.\n**/\nclass Meta {\n\n\t/**\n\t\tReturns the metadata that were declared for the given type (class or enum)\n\t**/\n\tpublic static function getType( t : Dynamic ) : Dynamic<Array<Dynamic>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.obj == null) ? {} : meta.obj;\n\t}\n\n\tprivate static function getMeta(t:Dynamic):Dynamic\n\t{\n#if (java || cs)\n\t\tvar ret = Reflect.field(t, \"__meta__\");\n\t\tif (ret == null && Std.is(t,Class))\n\t\t{\n#if java\n\t\t\tvar interf = java.Lib.toNativeType(t).isInterface();\n#elseif cs\n\t\t\tvar interf = cs.Lib.toNativeType(t).IsInterface;\n#end\n\t\t\tif (interf)\n\t\t\t{\n\t\t\t\tvar name = Type.getClassName(t),\n\t\t\t\t    cls = Type.resolveClass(name + '_HxMeta');\n\t\t\t\tif (cls != null)\n\t\t\t\t\treturn Reflect.field(cls, \"__meta__\");\n\t\t\t}\n\t\t}\n\t\treturn ret;\n#else\n\t\treturn untyped t.__meta__;\n#end\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class static fields\n\t**/\n\tpublic static function getStatics( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.statics == null) ? {} : meta.statics;\n\t}\n\n\t/**\n\t\tReturns the metadata that were declared for the given class fields or enum constructors\n\t**/\n\tpublic static function getFields( t : Dynamic ) : Dynamic<Dynamic<Array<Dynamic>>> {\n\t\tvar meta = getMeta(t);\n\t\treturn (meta == null || meta.fields == null) ? {} : meta.fields;\n\t}\n\n}\n","package helper;\r\n\r\nimport js.*;\r\nimport js.html.Element;\r\nimport polymer.*;\r\n\r\nusing StringTools;\r\nusing helper.DomHelper;\r\n\r\n/**\r\n * ...\r\n * @author Chris Anderson\r\n */\r\nclass DomHelper\r\n{\r\n\tstatic inline public function getDomInstance(polymerElementClass:Class<PolymerElement>, elementId:String):Dynamic\r\n\t{\r\n\t\treturn Browser.document.querySelector(elementId);\r\n\t}\r\n\t\r\n\tstatic public function stripDataBindingCharacters(string:String, ?startCharacters:String = '{', ?endCharacters:String = '}'):String\r\n\t{\r\n\t\treturn string.replace(startCharacters, '').replace(endCharacters, '').trim();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Try to find a Haxe event handler that matches an event handler declared in the dom\r\n\t */\r\n\tstatic inline public function mapDomEventHandler(elementInstance:Element, eventName:String, hostClassInstance:Dynamic):Void\r\n\t{\r\n\t\ttrace({'mapEventHandler() elementInstance':elementInstance});\r\n\t\ttrace({'mapEventHandler() hostClassInstance':hostClassInstance});\r\n\t\ttrace({'mapEventHandler() eventName':eventName});\r\n\t\t\r\n\t\tvar tempEventHandler = elementInstance.getAttribute(PolymerBase.EVENT_PREFIX + eventName).stripDataBindingCharacters();\r\n\t\t\r\n\t\t//trace('tempEventHandler.length: ' + tempEventHandler.length);\r\n\t\t//trace('onPolymerResponse.length: ' + 'onPolymerResponse'.length);\r\n\t\t//trace('tempEventHandler == onPolymerResponse: ' + (tempEventHandler == 'onPolymerResponse'));\r\n\t\t\r\n\t\t//Browser.window.console.warn('mapEventHandler() tempEventHandler: ', tempEventHandler);\r\n\t\t//Browser.window.console.warn('mapEventHandler() Reflect.field(hostClassInstance, tempEventHandler): ', Reflect.field(hostClassInstance, tempEventHandler));\r\n\t\t//Browser.window.console.warn('mapEventHandler() Reflect.isFunction(Reflect.field(hostClassInstance, tempEventHandler)): ', Reflect.isFunction(Reflect.field(hostClassInstance, tempEventHandler)));\r\n\t\t\r\n\t\tif(Reflect.isFunction(Reflect.field(hostClassInstance, tempEventHandler)))\r\n\t  {\r\n\t    //trace('found function: ' + tempEventHandler);\r\n\t\t\t\r\n      elementInstance.addEventListener(eventName, Reflect.field(hostClassInstance, tempEventHandler).bind(hostClassInstance));\r\n      //elementInstance.addEventListener(eventName, fireEvent);\r\n\t\t\t\r\n\t\t\t//function fireEvent(?event)\r\n\t\t\t//{\r\n\t\t\t\t////Browser.window.console.log('$tempEventHandler() event: ', event);\r\n\t\t\t\t//Reflect.callMethod(hostClassInstance, Reflect.field(hostClassInstance, tempEventHandler), [event]);\r\n\t\t\t//};\r\n\t\t\t//fireEvent();\r\n\t  }\r\n\t  else\r\n\t  {\r\n\t\t\t//after updating to haxe 3.2 throw doesn't seem to work as intended\r\n\t\t\t//throw 'The dom references a function: $tempEventHandler, but the function wasn\\'t found in ${Type.getClassName(Type.getClass(hostClassInstance))}.';\r\n\t\t\tBrowser.console.error('The dom references a function: $tempEventHandler, but the function wasn\\'t found in ${Type.getClassName(Type.getClass(hostClassInstance))}.');\r\n\t\t}\r\n\t}\r\n}","package helper;\r\n\r\nimport haxe.ds.StringMap;\r\nimport js.*;\r\nimport js.html.*;\r\n\r\nimport polymer.*;\r\n\r\nusing helper.DomHelper;\r\nusing StringTools;\r\n\r\n/**\r\n * ...\r\n * @author Chris Anderson\r\n * A collection of methods that help Haxe interact with Polymer Elements\r\n */\r\nclass PolymerElementHelper //extends PolymerElement\r\n{\t\r\n\t//had thought about grabbing an array of all shadowDom elements with an id similar to polymer's $ shortcut\r\n\t//would be cool if i could return a struct similar to $ instead StringMap<Element>\r\n\tstatic inline public function getStaticShadowDomNodeList(polymerElementInstance:PolymerElement):StringMap<Element>\r\n\t{\r\n\t\t//return polymerElementInstance[untyped __js__(\"'.$'\")];\r\n\t\t//return untyped __js__('$polymerElementInstance.$');\r\n\t\t//return untyped __js__('window.document.querySelector(\"#test36\").$');//fix here temp code\r\n\t\t\r\n\t\tvar tempElementsWithIdList = polymerElementInstance.shadowRoot.querySelectorAll('[id]');\r\n\t\t//var tempElementId = polymerElementInstance.shadowRoot.querySelector('#selectTest').id;\r\n\t\tvar tempResult:StringMap<Element> = new StringMap<Element>();// = \r\n\t\t//[\r\n\t\t\t//'$tempElementId' => polymerElementInstance.shadowRoot.querySelector('#selectTest'),\r\n\t\t\t//'selectTest' => polymerElementInstance.shadowRoot.querySelector('#selectTest')\r\n\t\t//];\r\n\t\t\r\n\t\tfor(tempProp in tempElementsWithIdList)\r\n\t\t{\r\n\t\t\t//Browser.window.console.warn('getStaticShadowDomNodeList() tempProp: ', tempProp);\r\n\t\t\t\r\n\t\t\tvar tempElement:Element = cast tempProp;\r\n\t\t\tvar tempElementId = tempElement.id;//.replace('$', '');\r\n\t\t\t\r\n\t\t\ttempResult.set(tempElementId, cast tempProp);\r\n\t\t}\r\n\t\t\r\n\t\t//Browser.window.console.warn('getStaticShadowDomNodeList() tempResult: ', tempResult);\r\n\t\t\r\n\t\treturn tempResult;\r\n\t}\r\n\t\r\n\tstatic inline public function getShadowDomElementById(polymerElementInstance:PolymerElement, elementId:String):Dynamic\r\n\t{\r\n\t\tvar tempStaticShadowDomNodeList = getStaticShadowDomNodeList(polymerElementInstance);\r\n\t\tvar tempResult = tempStaticShadowDomNodeList.get(elementId);\r\n\t\t\r\n\t\treturn (tempResult != null) ? tempResult : throw 'Element with id: $elementId wasn\\'t found in $tempStaticShadowDomNodeList.';\r\n\t}\r\n\t\r\n\tstatic inline public function getShadowDomElement(polymerElementInstance:PolymerElement, shadowDomElementId:String):Element\r\n\t{\r\n\t\tvar tempResult = cast(polymerElementInstance.shadowRoot.querySelector(shadowDomElementId), Element);\r\n\t\t\r\n\t\treturn (tempResult != null) ? tempResult : throw 'Element with id: $shadowDomElementId wasn\\'t found in ${polymerElementInstance.localName}.shadowRoot.';\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\treturn untyped Function('return typeof $name != \"undefined\" ? $name : null')();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","package minject;\n\nimport Map;\n\nclass ClassMap<V> implements IMap<Class<Dynamic>, V>\n{\n\tvar map:Map<String, V>;\n\n\tpublic function new()\n\t{\n\t\tmap = new Map();\n\t}\n\n\tpublic function get(k:Class<Dynamic>):Null<V>\n\t{\n\t\treturn map.get(getKey(k));\n\t}\n\n\tpublic function set(k:Class<Dynamic>, v:V):Void\n\t{\n\t\tmap.set(getKey(k), v);\n\t}\n\n\tpublic function exists(k:Class<Dynamic>):Bool\n\t{\n\t\treturn map.exists(getKey(k));\n\t}\n\n\tpublic function remove(k:Class<Dynamic>):Bool\n\t{\n\t\treturn map.remove(getKey(k));\n\t}\n\n\tpublic function keys():Iterator<Class<Dynamic>>\n\t{\n\t\treturn cast [for (k in map.keys()) Type.resolveClass(k)].iterator();\n\t}\n\n\tpublic function iterator():Iterator<V>\n\t{\n\t\treturn map.iterator();\n\t}\n\n\tpublic function toString()\n\t{\n\t\treturn map.toString();\n\t}\n\n\tinline function getKey(k:Class<Dynamic>)\n\t{\n\t\treturn Type.getClassName(k);\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject;\n\nimport minject.result.InjectionResult;\n\nclass InjectionConfig\n{\n\tpublic var request:Class<Dynamic>;\n\tpublic var injectionName:String;\n\n\tvar injector:Injector;\n\tvar result:InjectionResult;\n\t\n\tpublic function new(request:Class<Dynamic>, injectionName:String)\n\t{\n\t\tthis.request = request;\n\t\tthis.injectionName = injectionName;\n\t}\n\n\tpublic function getResponse(injector:Injector):Dynamic\n\t{\n\t\tif (this.injector != null) injector = this.injector;\n\n\t\tif (result != null) return result.getResponse(injector);\n\t\t\n\t\tvar parentConfig = injector.getAncestorMapping(request, injectionName);\n\t\tif (parentConfig != null) return parentConfig.getResponse(injector);\n\n\t\treturn null;\n\t}\n\n\tpublic function hasResponse(injector:Injector):Bool\n\t{\n\t\treturn (result != null);\n\t}\n\n\tpublic function hasOwnResponse():Bool\n\t{\n\t\treturn (result != null);\n\t}\n\n\tpublic function setResult(result:InjectionResult):Void\n\t{\n\t\t#if debug\n\t\tif (this.result != null && result != null)\n\t\t{\n\t\t\ttrace('Warning: Injector contains ${this.toString()}.\\nAttempting to overwrite this ' +\n\t\t\t\t'with mapping for [${result.toString()}].\\nIf you have overwritten this mapping ' +\n\t\t\t\t'intentionally you can use `injector.unmap()` prior to your replacement mapping ' +\n\t\t\t\t'in order to avoid seeing this message.');\n\t\t}\n\t\t#end\n\t\tthis.result = result;\n\t}\n\n\tpublic function setInjector(injector:Injector):Void\n\t{\n\t\tthis.injector = injector;\n\t}\n\n\tpublic function toString():String\n\t{\n\t\tvar named = injectionName != null && injectionName != \"\" ? ' named \"$injectionName\" and' : \"\";\n\t\treturn 'rule: [' + Type.getClassName(request) + ']$named mapped to [$result]';\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject;\n\nimport haxe.rtti.Meta;\nimport haxe.ds.WeakMap;\nimport haxe.ds.ObjectMap;\nimport minject.point.ConstructorInjectionPoint;\nimport minject.point.InjectionPoint;\nimport minject.point.MethodInjectionPoint;\nimport minject.point.NoParamsConstructorInjectionPoint;\nimport minject.point.PostConstructInjectionPoint;\nimport minject.point.PropertyInjectionPoint;\nimport minject.result.InjectClassResult;\nimport minject.result.InjectOtherRuleResult;\nimport minject.result.InjectSingletonResult;\nimport minject.result.InjectValueResult;\n\n/**\n\tThe dependency injector.\n**/\n#if !macro @:build(minject.Macro.addMetadata()) #end class Injector\n{\n\t/**\n\t\tA set of instances that have already had their dependencies satisfied by the injector.\n\t**/\n\tpublic var attendedToInjectees(default, null):InjecteeSet;\n\n\t/**\n\t\tThe parent of this injector.\n\t**/\n\tpublic var parentInjector(default, set):Injector;\n\n\tvar injectionConfigs:Map<String, InjectionConfig>;\n\tvar injecteeDescriptions:ClassMap<InjecteeDescription>;\n\t\n\tpublic function new()\n\t{\n\t\tinjectionConfigs = new Map();\n\t\tinjecteeDescriptions = new ClassMap();\n\t\tattendedToInjectees = new InjecteeSet();\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject the instance `useValue`.\n\t\t\n\t\tThis is used to register an existing instance with the injector and treat it like a \n\t\tSingleton.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useValue An instance\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapValue(whenAskedFor:Class<Dynamic>, useValue:Dynamic, ?named:String = \"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectValueResult(useValue));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject a new instance of \n\t\t`instantiateClass`.\n\t\t\n\t\tThis will create a new instance for each injection.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param instantiateClass A class to instantiate\n\t\t@param named An optional name (id)\n\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapClass(whenAskedFor:Class<Dynamic>, instantiateClass:Class<Dynamic>, ?named:String=\"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectClassResult(instantiateClass));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor` inject an instance of `whenAskedFor`.\n\t\t\n\t\tThis will create an instance on the first injection, but will re-use that instance for \n\t\tsubsequent injections.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapSingleton(whenAskedFor:Class<Dynamic>, ?named:String=\"\") :Dynamic\n\t{\n\t\treturn mapSingletonOf(whenAskedFor, whenAskedFor, named);\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor`\n\t\tinject an instance of `useSingletonOf`.\n\t\t\n\t\tThis will create an instance on the first injection, but will re-use that instance for \n\t\tsubsequent injections.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useSingletonOf A class to instantiate\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapSingletonOf(whenAskedFor:Class<Dynamic>, useSingletonOf:Class<Dynamic>, ?named:String=\"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectSingletonResult(useSingletonOf));\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tWhen asked for an instance of the class `whenAskedFor`\n\t\tuse rule `useRule` to determine the correct injection.\n\t\t\n\t\tThis will use whatever injection is set by the given injection rule as created using one \n\t\tof the other mapping methods.\n\t\t\n\t\t@param whenAskedFor A class or interface\n\t\t@param useRule The rule to use for the injection\n\t\t@param named An optional name (id)\n\t\t\n\t\t@returns A reference to the rule for this injection. To be used with `mapRule`\n\t**/\n\tpublic function mapRule(whenAskedFor:Class<Dynamic>, useRule:Dynamic, ?named:String = \"\"):Dynamic\n\t{\n\t\tvar config = getMapping(whenAskedFor, named);\n\t\tconfig.setResult(new InjectOtherRuleResult(useRule));\n\t\treturn useRule;\n\t}\n\t\n\tpublic function getMapping(forClass:Class<Dynamic>, ?named:String=\"\"):InjectionConfig\n\t{\n\t\tvar requestName = getClassName(forClass) + \"#\" + named;\n\t\t\n\t\tif (injectionConfigs.exists(requestName))\n\t\t{\n\t\t\treturn injectionConfigs.get(requestName);\n\t\t}\n\t\t\n\t\tvar config = new InjectionConfig(forClass, named);\n\t\tinjectionConfigs.set(requestName, config);\n\t\treturn config;\n\t}\n\t\n\t/**\n\t\tPerform an injection into an object, satisfying all it's dependencies\n\t\t\n\t\tThe `Injector` should throw an `Error` if it can't satisfy all dependencies of the injectee.\n\t\t\n\t\t@param target The object to inject into - the Injectee\n\t**/\n\tpublic function injectInto(target:Dynamic):Void\n\t{\n\t\tif (attendedToInjectees.contains(target))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tattendedToInjectees.add(target);\n\n\t\t// get injection points or cache them if this target's class wasn't encountered before\n\t\tvar targetClass = Type.getClass(target);\n\n\t\tvar injecteeDescription:InjecteeDescription = null;\n\n\t\tif (injecteeDescriptions.exists(targetClass))\n\t\t{\n\t\t\tinjecteeDescription = injecteeDescriptions.get(targetClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinjecteeDescription = getInjectionPoints(targetClass);\n\t\t}\n\n\t\tif (injecteeDescription == null) return;\n\n\t\tvar injectionPoints:Array<Dynamic> = injecteeDescription.injectionPoints;\n\t\tvar length:Int = injectionPoints.length;\n\n\t\tfor (i in 0...length)\n\t\t{\n\t\t\tvar injectionPoint:InjectionPoint = injectionPoints[i];\n\t\t\tinjectionPoint.applyInjection(target, this);\n\t\t}\n\t}\n\t\n\t/**\n\t\tConstructs an instance of theClass without satifying its dependencies.\n\t**/\n\tpublic function construct<T>(theClass:Class<T>):T\n\t{\n\t\tvar injecteeDescription:InjecteeDescription;\n\n\t\tif (injecteeDescriptions.exists(theClass))\n\t\t{\n\t\t\tinjecteeDescription = injecteeDescriptions.get(theClass);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinjecteeDescription = getInjectionPoints(theClass);\n\t\t}\n\n\t\tvar injectionPoint:InjectionPoint = injecteeDescription.ctor;\n\t\treturn injectionPoint.applyInjection(theClass, this);\n\t}\n\n\t/**\n\t\tCreate an object of the given class, supplying its dependencies as constructor parameters \n\t\tif the used DI solution has support for constructor injection\n\t\t\n\t\tAdapters for DI solutions that don't support constructor injection should just create a new \n\t\tinstance and perform setter and/or method injection on that.\n\t\t\n\t\tNOTE: This method will always create a new instance. If you need to retrieve an instance \n\t\tconsider using `getInstance`\n\t\t\n\t\tThe `Injector` should throw an `Error` if it can't satisfy all dependencies of the injectee.\n\t\t\n\t\t@param theClass The class to instantiate\n\t\t@returns The created instance\n\t**/\n\tpublic function instantiate<T>(theClass:Class<T>):T\n\t{\n\t\tvar instance = construct(theClass);\n\t\tinjectInto(instance);\n\t\treturn instance;\n\t}\n\t\n\t/**\n\t\tRemove a rule from the injector\n\n\t\t@param theClass A class or interface\n\t\t@param named An optional name (id)\n\t**/\n\tpublic function unmap(theClass:Class<Dynamic>, ?named:String=\"\"):Void\n\t{\n\t\tvar mapping = getConfigurationForRequest(theClass, named);\n\t\t\n\t\tif (mapping == null)\n\t\t{\n\t\t\tthrow 'Error while removing an injector mapping: No mapping defined for class ' + getClassName(theClass) + ', named \"' + named + '\"';\n\t\t}\n\n\t\tmapping.setResult(null);\n\t}\n\n\t/**\n\t\tDoes a rule exist to satsify such a request?\n\n\t\t@param forClass A class or interface\n\t\t@param named An optional name (id)\n\t\t@returns Whether such a mapping exists\n\t**/\n\tpublic function hasMapping(forClass:Class<Dynamic>, ?named:String = ''):Bool\n\t{\n\t\tvar mapping = getConfigurationForRequest(forClass, named);\n\t\t\n\t\tif (mapping == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn mapping.hasResponse(this);\n\t}\n\n\t/**\n\t\tCreate or retrieve an instance of the given class\n\t\t\n\t\t@param ofClass The class to retrieve.\n\t\t@param named An optional name (id)\n\t\t@return An instance\n\t**/\n\tpublic function getInstance<T>(ofClass:Class<T>, ?named:String=\"\"):T\n\t{\n\t\tvar mapping = getConfigurationForRequest(ofClass, named);\n\t\t\n\t\tif (mapping == null || !mapping.hasResponse(this))\n\t\t{\n\t\t\tthrow 'Error while getting mapping response: No mapping defined for class ' + getClassName(ofClass) + ', named \"' + named + '\"';\n\t\t}\n\n\t\treturn mapping.getResponse(this);\n\t}\n\t\n\t/**\n\t\tCreate an injector that inherits rules from its parent\n\t\t\n\t\t@returns The injector \n\t**/\n\tpublic function createChildInjector():Injector\n\t{\n\t\tvar injector = new Injector();\n\t\tinjector.parentInjector = this;\n\t\treturn injector;\n\t}\n\n\t/**\n\t\tSearches for an injection mapping in the ancestry of the injector. This method is called \n\t\twhen a dependency cannot be satisfied by this injector.\n\t**/\n\tpublic function getAncestorMapping(forClass:Class<Dynamic>, named:String=null):InjectionConfig\n\t{\n\t\tvar parent = parentInjector;\n\n\t\twhile (parent != null)\n\t\t{\n\t\t\tvar parentConfig = parent.getConfigurationForRequest(forClass, named, false);\n\n\t\t\tif (parentConfig != null && parentConfig.hasOwnResponse())\n\t\t\t{\n\t\t\t\treturn parentConfig;\n\t\t\t}\n\n\t\t\tparent = parent.parentInjector;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n\tfunction getInjectionPoints(forClass:Class<Dynamic>):InjecteeDescription\n\t{\n\t\tvar typeMeta = Meta.getType(forClass);\n\n\t\t#if debug\n\t\tif (typeMeta != null && Reflect.hasField(typeMeta, \"interface\"))\n\t\t\tthrow \"Interfaces can't be used as instantiatable classes.\";\n\t\t#end\n\n\t\tvar fieldsMeta = getFields(forClass);\n\n\t\tvar ctorInjectionPoint:InjectionPoint = null;\n\t\tvar injectionPoints:Array<InjectionPoint> = [];\n\t\tvar postConstructMethodPoints:Array<Dynamic> = [];\n\t\t\n\t\tfor (field in Reflect.fields(fieldsMeta))\n\t\t{\n\t\t\tvar fieldMeta:Dynamic = Reflect.field(fieldsMeta, field);\n\t\t\t// fieldMeta.name = field;\n\n\t\t\tvar inject = Reflect.hasField(fieldMeta, \"inject\");\n\t\t\tvar post = Reflect.hasField(fieldMeta, \"post\");\n\t\t\tvar type = Reflect.field(fieldMeta, \"type\");\n\t\t\tvar args = Reflect.field(fieldMeta, \"args\");\n\t\t\t\n\t\t\tif (field == \"_\") // constructor\n\t\t\t{\n\t\t\t\tif (args.length > 0)\n\t\t\t\t{\n\t\t\t\t\tctorInjectionPoint = new ConstructorInjectionPoint(fieldMeta.args);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Reflect.hasField(fieldMeta, \"args\")) // method\n\t\t\t{\n\t\t\t\tif (inject) // injection\n\t\t\t\t{\n\t\t\t\t\tvar point = new MethodInjectionPoint(field, fieldMeta.args);\n\t\t\t\t\tinjectionPoints.push(point);\n\t\t\t\t}\n\t\t\t\telse if (post) // post construction\n\t\t\t\t{\n\t\t\t\t\tvar order = fieldMeta.post == null ? 0 : fieldMeta.post[0];\n\t\t\t\t\tvar point = new PostConstructInjectionPoint(field, order);\n\t\t\t\t\tpostConstructMethodPoints.push(point);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type != null) // property\n\t\t\t{\n\t\t\t\tvar name = fieldMeta.inject == null ? null : fieldMeta.inject[0];\n\t\t\t\tvar point = new PropertyInjectionPoint(field, fieldMeta.type[0], name);\n\t\t\t\tinjectionPoints.push(point);\n\t\t\t}\n\t\t}\n\n\t\tif (postConstructMethodPoints.length > 0)\n\t\t{\n\t\t\tpostConstructMethodPoints.sort(function(a, b) { return a.order - b.order; });\n\t\t\tfor (point in postConstructMethodPoints) injectionPoints.push(point);\n\t\t}\n\n\t\tif (ctorInjectionPoint == null)\n\t\t\tctorInjectionPoint = new NoParamsConstructorInjectionPoint();\n\n\t\tvar injecteeDescription = new InjecteeDescription(ctorInjectionPoint, injectionPoints);\n\t\tinjecteeDescriptions.set(forClass, injecteeDescription);\n\t\treturn injecteeDescription;\n\t}\n\n\tfunction getConfigurationForRequest(forClass:Class<Dynamic>, named:String, ?traverseAncestors:Bool=true):InjectionConfig\n\t{\n\t\tvar requestName = getClassName(forClass) + '#' + named;\n\t\t\n\t\tif (!injectionConfigs.exists(requestName))\n\t\t{\n\t\t\tif (traverseAncestors && parentInjector != null \n\t\t\t\t&& parentInjector.hasMapping(forClass, named))\n\t\t\t\t\treturn getAncestorMapping(forClass, named);\n\t\t\treturn null;\n\t\t}\n\n\t\treturn injectionConfigs.get(requestName);\n\t}\n\n\tfunction set_parentInjector(value:Injector):Injector\n\t{\n\t\t// restore own map of worked injectees if parent injector is removed\n\t\tif (parentInjector != null && value == null) attendedToInjectees = new InjecteeSet();\n\n\t\tparentInjector = value;\n\n\t\t// use parent's map of worked injectees\n\t\tif (parentInjector != null) attendedToInjectees = parentInjector.attendedToInjectees;\n\n\t\treturn parentInjector;\n\t}\n\n\tfunction getClassName(forClass:Class<Dynamic>):String\n\t{\n\t\tif (forClass == null) return \"Dynamic\";\n\t\telse return Type.getClassName(forClass);\n\t}\n\n\tfunction getFields(type:Class<Dynamic>)\n\t{\n\t\tvar meta = {};\n\t\twhile (type != null)\n\t\t{\n\t\t\tvar typeMeta = haxe.rtti.Meta.getFields(type);\n\t\t\tfor (field in Reflect.fields(typeMeta))\n\t\t\t\tReflect.setField(meta, field, Reflect.field(typeMeta, field));\n\t\t\ttype = Type.getSuperClass(type);\n\t\t}\n\t\treturn meta;\n\t}\n}\n\n/**\n\tContains the set of objects which have been injected into.\n\t \n\tUnder dynamic languages that don't support weak references this set a \n\thidden property on an injectee when added, to mark it as injected. This is \n\tto avoid storing a direct reference of it here, causing it never to be \n\tavailable for GC.\n**/\nclass InjecteeSet\n{\n\t#if (flash9 || java || php)\n\tvar map:WeakMap<{}, Bool>;\n\t#elseif cpp\n\tvar map:ObjectMap<{}, Bool>;\n\t#end\n\n\tpublic function new()\n\t{\n\t\t#if (flash9 || java || php)\n\t\tmap = new WeakMap<{}, Bool>();\n\t\t#elseif cpp\n\t\tmap = new ObjectMap<{}, Bool>();\n\t\t#end\n\t}\n\n\tpublic function add(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\tmap.set(value, true);\n\t\t#else\n\t\tvalue.__injected__ = true;\n\t\t#end\n\t}\n\n\tpublic function contains(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\treturn map.exists(value);\n\t\t#else\n\t\treturn value.__injected__ == true;\n\t\t#end\n\t}\n\n\tpublic function remove(value:Dynamic)\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\tmap.remove(value);\n\t\t#else\n\t\tReflect.deleteField(value, \"__injected__\");\n\t\t#end\n\t}\n\n\t// deprecated\n\tinline public function delete(value:Dynamic) remove(value);\n\n\t/**\n\t\tUnder dynamic targets that don't support weak refs (js, avm1, neko) this will always \n\t\treturn an empty iterator due to values not being stored in this set. This is to avoid \n\t\tmemory leaks.\n\t**/\n\tpublic function iterator()\n\t{\n\t\t#if (flash9 || cpp || java || php)\n\t\treturn map.iterator();\n\t\t#else\n\t\treturn [].iterator();\n\t\t#end\n\t}\n}\n\nclass InjecteeDescription\n{\n\tpublic var ctor:InjectionPoint;\n\tpublic var injectionPoints:Array<InjectionPoint>;\n \n\tpublic function new(ctor:InjectionPoint, injectionPoints:Array<InjectionPoint>)\n\t{\n\t\tthis.ctor = ctor;\n\t\tthis.injectionPoints = injectionPoints;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass MethodInjectionPoint implements InjectionPoint\n{\n\tpublic var name(default, null):String;\n\tpublic var args(default, null):Array<ArgInjectionInfo>;\n\t\n\tpublic function new(name:String, args:Array<ArgInjectionInfo>)\n\t{\n\t\tthis.name = name;\n\t\tthis.args = args;\n\n\t\t#if debug\n\t\tfor (arg in args)\n\t\t\tif (arg.type == \"Dynamic\")\n\t\t\t\tthrow 'Error in method definition of injectee. Required parameters can\\'t have non class type.';\n\t\t#end\n\t}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tReflect.callMethod(target, Reflect.field(target, name), gatherArgs(target, injector));\n\t\treturn target;\n\t}\n\t\n\tfunction gatherArgs(target:Dynamic, injector:Injector):Array<Dynamic>\n\t{\n\t\tvar values = [];\n\n\t\tfor (arg in args)\n\t\t{\n\t\t\tvar name = arg.name == null ? \"\" : arg.name;\n\t\t\tvar config = injector.getMapping(Type.resolveClass(arg.type), arg.name);\n\t\t\tvar injection = config.getResponse(injector);\n\n\t\t\t#if debug\n\t\t\tif (injection == null && !arg.opt)\n\t\t\t{\n\t\t\t\tvar targetName = Type.getClassName(Type.getClass(target));\n\t\t\t\tvar requestName = Type.getClassName(config.request);\n\t\t\t\tthrow 'Injector is missing a rule to handle injection into target $targetName. ' +\n\t\t\t\t\t'Target dependency: $requestName, method: $name, named: ' + arg.name;\n\t\t\t}\n\t\t\t#end\n\t\t\tvalues.push(injection);\n\t\t}\n\n\t\treturn values;\n\t}\n}\n\ntypedef ArgInjectionInfo = {\n\tvar opt:Bool;\n\tvar type:String;\n\t@:optional var name:String;\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\nimport minject.point.MethodInjectionPoint;\n\nclass ConstructorInjectionPoint extends MethodInjectionPoint\n{\n\tpublic function new(args:Array<ArgInjectionInfo>)\n\t{\n\t\tsuper('new', args);\n\t}\n\t\n\toverride public function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\treturn Type.createInstance(target, gatherArgs(target, injector));\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass NoParamsConstructorInjectionPoint implements InjectionPoint\n{\n\tpublic function new() {}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\treturn Type.createInstance(target, []);\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass PostConstructInjectionPoint implements InjectionPoint\n{\n\tpublic var name(default, null):String;\n\tpublic var order(default, null):Int;\n\t\n\tpublic function new(name:String, ?order:Int=0)\n\t{\n\t\tthis.name = name;\n\t\tthis.order = order;\n\t}\n\t\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tReflect.callMethod(target, Reflect.field(target, name), []);\n\t\treturn target;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\nclass PropertyInjectionPoint implements InjectionPoint\n{\n\tvar name:String;\n\tvar type:String;\n\tvar injectionName:String;\n\n\tpublic function new(name:String, type:String, ?injectionName:String=null)\n\t{\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.injectionName = injectionName;\n\t}\n\n\tpublic function applyInjection(target:Dynamic, injector:Injector):Dynamic\n\t{\n\t\tvar injectionConfig = injector.getMapping(Type.resolveClass(type), injectionName);\n\t\tvar injection = injectionConfig.getResponse(injector);\n\t\t#if debug\n\t\tif (injection == null)\n\t\t\tthrow 'Injector is missing a rule to handle injection into property \"$name\" ' +\n\t\t\t\t'of object \"$target\". Target dependency: \"$type\", named \"$injectionName\"';\n\t\t#end\n\t\tReflect.setProperty(target, name, injection);\n\t\treturn target;\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.result;\n\nimport minject.Injector;\n\nclass InjectionResult\n {\n\tpublic function new() {}\n\n\tpublic function getResponse(injector:Injector):Dynamic\n\t{\n\t\treturn null;\n\t}\n\n\tpublic function toString():String\n\t{\n\t\treturn \"\";\n\t}\n}\n","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.result;\n\nimport minject.Injector;\n\nclass InjectValueResult extends InjectionResult\n{\n\tvar value:Dynamic;\n\t\n\tpublic function new(value:Dynamic)\n\t{\n\t\tsuper();\n\t\tthis.value = value;\n\t}\n\t\n\toverride public function getResponse(injector:Injector):Dynamic\n\t{\n\t\treturn value;\n\t}\n\n\toverride public function toString():String\n\t{\n\t\treturn \"instance of \" + Type.getClassName(Type.getClass(value));\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Slot;\n\n/**\n\tA convenience type describing any kind of signal.\n**/\ntypedef AnySignal = Signal<Dynamic, Dynamic>;\n\n/**\n\tA Signal manages a list of listeners, which are executed when the signal is \n\tdispatched.\n**/\n@:keepSub\nclass Signal<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\tpublic var valueClasses:Array<Dynamic>;\n\n\t/**\n\t\tThe current number of listeners for the signal.\n\t**/\n\tpublic var numListeners(get, null):Int;\n\t\n\tvar slots:SlotList<TSlot, TListener>;\n\tvar priorityBased:Bool;\n\n\tfunction new(?valueClasses:Array<Dynamic>)\n\t{\n\t\tif (valueClasses == null) valueClasses = [];\n\t\tthis.valueClasses = valueClasses;\n\t\tslots = cast SlotList.NIL;\n\t\tpriorityBased = false;\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function add(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is called,\n\t\tafter the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnce(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener, true);\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\tAfter you successfully register an event listener,\n\t\tyou cannot change its priority through additional calls to add().\n\t\tTo change a listener's priority, you must first call remove().\n\t\tThen you can register the listener again with the new priority level.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, false, priority);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is \n\t\tcalled, after the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnceWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, true, priority);\n\t}\n\n\t/**\n\t\tUnsubscribes a listener from the signal.\n\t\t\n\t\t@param listener The listener to remove\n\t\t@return The removed listener slot\n\t**/\n\tpublic function remove(listener:TListener):TSlot\n\t{\n\t\tvar slot = slots.find(listener);\n\t\tif (slot == null) return null;\n\t\t\n\t\tslots = slots.filterNot(listener);\n\t\treturn slot;\n\t}\n\n\t/**\n\t\tUnsubscribes all listeners from the signal.\n\t**/\n\tpublic function removeAll():Void\n\t{\n\t\tslots = cast SlotList.NIL;\n\t}\n\n\tfunction registerListener(listener:TListener, ?once:Bool=false, ?priority:Int=0):TSlot\n\t{\n\t\tif (registrationPossible(listener, once))\n\t\t{\n\t\t\tvar newSlot = createSlot(listener, once, priority);\n\t\t\t\n\t\t\tif (!priorityBased && priority != 0) priorityBased = true;\n\t\t\tif (!priorityBased && priority == 0) slots = slots.prepend(newSlot);\n\t\t\telse slots = slots.insertWithPriority(newSlot);\n\n\t\t\treturn newSlot;\n\t\t}\n\t\t\n\t\treturn slots.find(listener);\n\t}\n\n\tfunction registrationPossible(listener, once)\n\t{\n\t\tif (!slots.nonEmpty) return true;\n\t\t\n\t\tvar existingSlot = slots.find(listener);\n\t\tif (existingSlot == null) return true;\n\n\t\t#if debug\n\t\tif (existingSlot.once != once)\n\t\t{\n\t\t\t// If the listener was previously added, definitely don't add it again.\n\t\t\t// But throw an exception if their once values differ.\n\t\t\tthrow \"You cannot addOnce() then add() the same listener without removing the relationship first.\";\n\t\t}\n\t\t#end\n\t\t\n\t\treturn false; // Listener was already registered.\n\t}\n\n\tfunction createSlot(listener:TListener, ?once:Bool=false, ?priority:Int=0):TSlot\n\t{\n\t\treturn null;\n\t}\n\n\tfunction get_numListeners()\n\t{\n\t\treturn slots.length;\n\t}\n}\n\n/**\n\tSignal that executes listeners with no arguments.\n**/\nclass Signal0 extends Signal<Slot0, Void -> Void>\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with no arguements.\n\t**/\n\tpublic function dispatch()\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute();\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:Void -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot0(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass Signal1<TValue> extends Signal<Slot1<TValue>, TValue -> Void>\n{\n\tpublic function new(?type:Dynamic=null)\n\t{\n\t\tsuper([type]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with one arguement.\n\t**/\n\tpublic function dispatch(value:TValue)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot1<TValue>(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with two arguments.\n**/\nclass Signal2<TValue1, TValue2> extends Signal<Slot2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\tpublic function new(?type1:Dynamic=null, ?type2:Dynamic=null)\n\t{\n\t\tsuper([type1, type2]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with two arguements.\n\t**/\n\tpublic function dispatch(value1:TValue1, value2:TValue2)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value1, value2);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue1 -> TValue2 -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\treturn new Slot2<TValue1, TValue2>(this, listener, once, priority);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\n\n/**\n\tA convenience type describing any kind of slot.\n**/\ntypedef AnySlot = Slot<Dynamic, Dynamic>;\n\n/**\n\tDefines the basic properties of a listener associated with a Signal.\n**/\n#if haxe3\nclass Slot<TSignal:msignal.Signal.AnySignal, TListener>\n#else\nclass Slot<TSignal:Signal<Dynamic, TListener>, TListener>\n#end\n{\n\t/**\n\t\tThe listener associated with this slot.\n\t\tNote: for hxcpp 2.10 this requires a getter method to compile\n\t**/\n\t#if cpp\n\t#if haxe3 @:isVar #end\n\tpublic var listener(get_listener, set_listener):TListener;\n\t#else\n\t#if haxe3 @:isVar #end\n\tpublic var listener(default, set_listener):TListener;\n\t#end\n\t\n\n\t/**\n\t\tWhether this slot is automatically removed after it has been used once.\n\t**/\n\tpublic var once(default, null):Bool;\n\n\t/**\n\t\tThe priority of this slot should be given in the execution order.\n\t\tAn Signal will call higher numbers before lower ones.\n\t\tDefaults to 0.\n\t**/\n\tpublic var priority(default, null):Int;\n\n\t/**\n\t\tWhether the listener is called on execution. Defaults to true.\n\t**/\n\tpublic var enabled:Bool;\n\n\tvar signal:TSignal;\n\t\n\tfunction new(signal:TSignal, listener:TListener, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tthis.signal = signal;\n\t\tthis.listener = listener;\n\t\tthis.once = once;\n\t\tthis.priority = priority;\n\t\tthis.enabled = true;\n\t}\n\n\t/**\n\t\tRemoves the slot from its signal.\n\t**/\n\tpublic function remove()\n\t{\n\t\tsignal.remove(listener);\n\t}\n\n\t#if cpp\n\t/**\n\t\tHxcpp 2.10 requires a getter method for a typed function property in \n\t\torder to compile\n\t**/\n\tfunction get_listener():TListener\n\t{\n\t\treturn listener;\n\t}\n\t#end\n\n\tfunction set_listener(value:TListener):TListener\n\t{\n\t\t#if debug\n\t\tif (value == null) throw \"listener cannot be null\";\n\t\t#end\n\t\treturn listener = value;\n\t}\n}\n\n/**\n\tA slot that executes a listener with no arguments.\n**/\nclass Slot0 extends Slot<Signal0, Void -> Void>\n{\n\tpublic function new(signal:Signal0, listener:Void -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with no arguments.\n\t**/\n\tpublic function execute()\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tlistener();\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass Slot1<TValue> extends Slot<Signal1<TValue>, TValue -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the argument to dispatch.\n\t**/\n\tpublic var param:TValue;\n\n\tpublic function new(signal:Signal1<TValue>, listener:TValue -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf <code>param</code> is not null, it overrides the value provided.\n\t**/\n\tpublic function execute(value1:TValue)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tif (param != null) value1 = param;\n\t\tlistener(value1);\n\t}\n}\n\n/**\n\tA slot that executes a listener with two arguments.\n**/\nclass Slot2<TValue1, TValue2> extends Slot<Signal2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the first argument to dispatch.\n\t**/\n\tpublic var param1:TValue1;\n\n\t/**\n\t\tAllows the slot to inject the second argument to dispatch.\n\t**/\n\tpublic var param2:TValue2;\n\n\tpublic function new(signal:Signal2<TValue1, TValue2>, listener:TValue1 -> TValue2 -> Void, ?once:Bool=false, ?priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with two arguments.\n\t\tIf <code>param1</code> or <code>param2</code> is set, \n\t\tthey override the values provided.\n\t**/\n\tpublic function execute(value1:TValue1, value2:TValue2)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\t\n\t\tif (param1 != null) value1 = param1;\n\t\tif (param2 != null) value2 = param2;\n\t\t\n\t\tlistener(value1, value2);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nclass SlotList<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\t@:IgnoreCover\n\tstatic function __init__() { NIL = new SlotList<Dynamic, Dynamic>(null, null); }\n\t\n\t/**\n\t\tRepresents an empty list. Used as the list terminator.\n\t**/\n\tpublic static var NIL:SlotList<Dynamic, Dynamic>;\n\t\n\tpublic var head:TSlot;\n\tpublic var tail:SlotList<TSlot, TListener>;\n\tpublic var nonEmpty:Bool;\n\t\n\t/**\n\t\tCreates and returns a new SlotList object.\n\n\t\t<p>A user never has to create a SlotList manually. \n\t\tUse the <code>NIL</code> element to represent an empty list. \n\t\t<code>NIL.prepend(value)</code> would create a list containing \n\t\t<code>value</code></p>.\n\n\t\t@param head The first slot in the list.\n\t\t@param tail A list containing all slots except head.\n\t**/\n\tpublic function new(head:TSlot, ?tail:SlotList<TSlot, TListener>=null)\n\t{\n\t\tnonEmpty = false;\n\t\t\n\t\tif (head == null && tail == null)\n\t\t{\n\t\t\t#if debug\n\t\t\tif (NIL != null) throw \"Parameters head and tail are null. Use the NIL element instead.\";\n\t\t\t#end\n\n\t\t\t// this is the NIL element as per definition\n\t\t\tnonEmpty = false;\n\t\t}\n\t\telse if (head == null)\n\t\t{\n\t\t\t#if debug\n\t\t\tthrow \"Parameter head cannot be null.\";\n\t\t\t#end\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.head = head;\n\t\t\tthis.tail = (tail == null ? cast NIL : tail);\n\t\t\tnonEmpty = true;\n\t\t}\n\t}\n\t\n\t/**\n\t\tThe number of slots in the list.\n\t**/\n\tpublic var length(get_length, null):Int;\n\tfunction get_length():Int\n\t{\n\t\tif (!nonEmpty) return 0;\n\t\tif (tail == NIL) return 1;\n\t\t\n\t\t// We could cache the length, but it would make methods like filterNot unnecessarily complicated.\n\t\t// Instead we assume that O(n) is okay since the length property is used in rare cases.\n\t\t// We could also cache the length lazy, but that is a waste of another 8b per list node (at least).\n\t\t\n\t\tvar result = 0;\n\t\tvar p = this;\n\t\t\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\t++result;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tPrepends a slot to this list.\n\t\t@param\tslot The item to be prepended.\n\t\t@return\tA list consisting of slot followed by all elements of this list.\n\t**/\n\tpublic function prepend(slot:TSlot)\n\t{\n\t\treturn new SlotList<TSlot, TListener>(slot, this);\n\t}\n\t\n\t/**\n\t\tAppends a slot to this list.\n\t\tNote: appending is O(n). Where possible, prepend which is O(1).\n\t\tIn some cases, many list items must be cloned to \n\t\tavoid changing existing lists.\n\t\t@param\tslot The item to be appended.\n\t\t@return\tA list consisting of all elements of this list followed by slot.\n\t**/\n\tpublic function append(slot:TSlot)\n\t{\n\t\tif (slot == null) return this;\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\t// Special case: just one slot currently in the list.\n\t\tif (tail == NIL) \n\t\t{\n\t\t\treturn new SlotList<TSlot, TListener>(slot).prepend(head);\n\t\t}\n\t\t\n\t\t// The list already has two or more slots.\n\t\t// We have to build a new list with cloned items because they are immutable.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Append the new slot last.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\t\t\n\t\n\t/**\n\t\tInsert a slot into the list in a position according to its priority.\n\t\tThe higher the priority, the closer the item will be inserted to the \n\t\tlist head.\n\t\t@param slot The item to be inserted.\n\t**/\n\tpublic function insertWithPriority(slot:TSlot)\n\t{\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\tvar priority:Int = slot.priority;\n\t\t\n\t\t// Special case: new slot has the highest priority.\n\t\tif (priority >= this.head.priority) return prepend(slot);\n\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\n\t\t// Find a slot with lower priority and go in front of it.\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (priority > current.head.priority)\n\t\t\t{\n\t\t\t\tsubClone.tail = current.prepend(slot);\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Slot has lowest priority.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\n\t\n\t/**\n\t\tReturns the slots in this list that do not contain the supplied \n\t\tlistener. Note: assumes the listener is not repeated within the list.\n\t\t@param\tlistener The function to remove.\n\t\t@return A list consisting of all elements of this list that do not \n\t\t\t\thave listener.\n\t**/\n\tpublic function filterNot(listener:TListener)\n\t{\n\t\tif (!nonEmpty || listener == null) return this;\n\t\t\n\t\tif (Reflect.compareMethods(head.listener, listener)) return tail;\n\t\t\n\t\t// The first item wasn't a match so the filtered list will contain it.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(current.head.listener, listener))\n\t\t\t{\n\t\t\t\t// Splice out the current head.\n\t\t\t\tsubClone.tail = current.tail;\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// The listener was not found so this list is unchanged.\n\t\treturn this;\n\t}\n\t\n\t/**\n\t\tDetermines whether the supplied listener Function is contained \n\t\twithin this list\n\t**/\n\tpublic function contains(listener:TListener):Bool\n\t{\n\t\tif (!nonEmpty) return false;\n\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return true;\n\t\t\tp = p.tail;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t/**\n\t\tRetrieves the Slot associated with a supplied listener within the SlotList.\n\t\t@param   listener The Function being searched for\n\t\t@return  The ISlot in this list associated with the listener parameter \n\t\t\t\t through the ISlot.listener property. Returns null if no such \n\t\t\t\t ISlot instance exists or the list is empty.  \n\t**/\n\tpublic function find(listener:TListener):TSlot\n\t{\n\t\tif (!nonEmpty) return null;\n\t\t\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return p.head;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n","package test;\r\n\r\n//import bindx.IBindable;\r\n//import prime.bindable.IBindableReadonly;\r\nimport typeDefinitions.GridData;\r\n\r\n/**\r\n * ...\r\n * @author Chris Anderson\r\n */\r\nclass TestClass //implements IBindableReadonly\r\n{\r\n\tpublic var id:Int;\r\n\t\r\n\t//public var gridData:GridData;\r\n\tpublic var gridData(get, set):GridData;\r\n\t\r\n\tprivate var _gridData:GridData;\r\n\r\n\tpublic function new()\r\n\t{\r\n\t\tid = 0;\r\n\t}\r\n\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn \"TestClass id: \" + id;\r\n\t}\r\n\t\r\n\tpublic function get_gridData():GridData \r\n\t{\r\n\t\treturn _gridData;\r\n\t}\r\n\tpublic function set_gridData(value:GridData):GridData \r\n\t{\r\n\t\ttrace({'set_gridData value':value});\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\n/**\n\tThis type unifies with any function type.\n\n\tIt is intended to be used as a type parameter constraint. If used as a real\n\ttype, the underlying type will be `Dynamic`.\n**/\n@:callable\nabstract Function(Dynamic) { }\n\n/**\n\tThis type unifies with an enum instance if all constructors of the enum\n\trequire no arguments.\n\n\tIt is intended to be used as a type parameter constraint. If used as a real\n\ttype, the underlying type will be `Dynamic`.\n**/\nabstract FlatEnum(Dynamic) { }\n\ninterface IMap<K,V> {\n\tpublic function get(k:K):Null<V>;\n\tpublic function set(k:K, v:V):Void;\n\tpublic function exists(k:K):Bool;\n\tpublic function remove(k:K):Bool;\n\tpublic function keys():Iterator<K>;\n\tpublic function iterator():Iterator<V>;\n\tpublic function toString():String;\n}","/*\nCopyright (c) 2012-2014 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage minject.point;\n\nimport minject.Injector;\n\ninterface InjectionPoint\n{\n\tfunction applyInjection(target:Dynamic, injector:Injector):Dynamic;\n}\n"],
"names":[],
"mappings":"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"
}